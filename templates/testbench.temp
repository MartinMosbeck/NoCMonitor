//TEMPLATE (%%...) parameter:
// CONNECTIONS
// CREATE_PEs
// MAPPINGS_mkNetwork

`include "connect_parameters.v"


module testbench();
	parameter HalfClkPeriod = 5;
	parameter ClkPeriod = 2*HalfClkPeriod;

	reg clk;
	reg rst_n;

        parameter vc_bits = (`NUM_VCS > 1) ? $clog2(`NUM_VCS) : 1;
	parameter dest_bits = $clog2(`NUM_USER_RECV_PORTS);
	parameter flit_port_width = 2 /*valid and tail bits*/+ `FLIT_DATA_WIDTH + dest_bits + vc_bits;
	parameter credit_port_width = 1 + vc_bits; // 1 valid bit
	parameter credit_cnt_width = $clog2(`FLIT_BUFFER_DEPTH + 1);

	{{ CONNECTIONS }}


	// Generate Clock
	initial clk = 0;
	always #(HalfClkPeriod) clk = ~clk;
    
//Perform reset and enable all    
        initial begin 
                $display("---- Performing Reset ----");
                rst_n = 0; // perform reset (active low) 
                #(5*ClkPeriod+HalfClkPeriod); 
                rst_n = 1; 
                #(HalfClkPeriod);

        //ENABLES
                {{ ENABLES }}
        
        end

	{{ CREATE_PEs }}

	
	mkNetwork dut
	(
		.CLK(clk),
                .RST_N(rst_n),
		
                {{ MAPPINGS_mkNetwork }}
	);


endmodule



